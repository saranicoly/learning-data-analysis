write a code that spells a name in the same line
example: instead 
b
a
n
a
n
a

the code should prompt

banana

(do it in python and c)

2. strip()
3. handle = open(filename.txt, mode)
you can open, read, write and close

4. dictionaries (9.2)
get method for dictionaries

x = dictionary.get(name_key, number_default)
number_default = the default value if the key doesn'n exists.

-instead 
if key in counts:
    counts[key] = counts[key] + 1
else:
    counts[key] = 1

-you can use 
counts[key] = counts.get(key,0) + 1

- using a for loop into a dictionary, the for won't look to the values, but just
to the keys;
- you can get a list of keys, values or items (both) from a dictionary;
print(dictionary.keys())
print(dictionary.values())
print(dictionary.items())
- you also can get key and value using the for loop
dictionary = {"sara" : 1, "fred" : 2}
for aaa(key),bbb(value) in dictionary.items():
    print(aaa, bbb)
>> sara 1
>> fred 2


purse = dict()
purse['money'] = 12
purse['candy'] = 3
purse['tissues'] = 35
print(purse) 
>>> {'money': 12, 'tissues': 75, 'candy': 3}

print(purse['candy'])
>>>3



tuples
- a tuple is just a list that cannot be modified
- the sintax is just as a list except we use parentheses 
>>> x = ("Glenn", "Sally", "Sara")
>>> (x, y) = (4, 5)

we can sort a list of tuples (a dict):

d = {'a': 1, 'c': 15, 'b': 10}
//disordened

sorted(d.items())
[('a', 1), ('b', 10), ('c', 15)]

//sort by key

//sort by values instead of key
>>> d = {'a': 1, 'b': 15, 'c': 10}
>>> tmp = list()
>>> for k, v in d.items:
        tmp.append( (v, k) )

>>> tmp = sorted(tmp, reverse=True)
>>> print(tmp)
[(15, 'b'), (10, 'c'), (1, 'a')}


TABELA ASCII
- The ord() function tell us the numeric
value of a simple ASCII character

print(ord("H"))
>>>72

decoding byte datas to utf-8

while True:
   data = mysock.recv(512)
   if (len(data)<1):
      break
   mystring = data.decode()
   print(mystring)

- encode() takes the string and makes it 
into bytes